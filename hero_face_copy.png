<html>
	<head>
		<style>
		body,html {
			padding:0px;
			margin: 0px;
		}

		#frame {
			width: 100%;
			height: 100%;
		}
		</style>
		

	</head>
	
	<body>
	
		


		<script>

			if ('serviceWorker' in navigator) {

				if (!navigator.serviceWorker.controller) {
		           navigator.serviceWorker.register('/sw.js')
		            .then(function(reg) {
		              location.reload();
		            }).catch(function(error) {
		              console.log('Registration failed with ' + error);
		            });
		      	} else {
		        	navigator.serviceWorker.register('/sw.js').then(function(reg) {
		          		reg.update();
		        	});
		    	}
			// navigator.serviceWorker.register('/sw.js')
			//   .then(function(reg) {
			//   	reg.update();
			//     // registration worked
			//     console.log('Registration succeeded. Scope is ' + reg.scope);
			//     location.reload();
			//   }).catch(function(error) {
			//     // registration failed
			//     console.log('Registration failed with ' + error);
			//   });
			} else {
				var r = location.href.replace(location.protocol + "//" + location.host + "/raw", "https://rawgit.com");
				location.replace(r);
			}

		   // var config = {
		   //  	apiKey: "AIzaSyDQJeMnXajihR3fw9uUeCjnC7FC8mrKG1Y",
		   //  	authDomain: "pingendoauth.firebaseapp.com",
		   //  	databaseURL: "https://pingendoauth.firebaseio.com",
		  	// };
		  	// firebase.initializeApp(config);
		  	
 	    	// firebase.auth().onAuthStateChanged(function(user) {
    	  //   	if (!firebase.auth().currentUser) {
    	    		
    	  //   	} else {
    	  //   		firebase.database().ref('users/' + firebase.auth().currentUser.uid).once('value', function(snapshot) {
       //    				window.t = snapshot.val().accessToken;
       //    				console.log("..", firebase.auth().currentUser.uid, snapshot.val().accessToken);
       //    			});	
    	  //   	}	    	 	
      	// 	});

			// var provider = new firebase.auth.GithubAuthProvider();
		 //    provider.addScope('repo,email');
		 //    firebase.auth().signInWithPopup(provider).then(function(result) {
		 //      var token = result.credential.accessToken;
		 //      console.log("new one", token);
		      
		 //      navigator.serviceWorker.controller.postMessage(token);

		 //      firebase.database().ref('users/' + result.user.uid).set({
		 //        accessToken: result.credential.accessToken
		 //      });
		 //      // logInGithub();
		 //    });

		</script>
		<img src="a.jpg">
	</body>

</html>